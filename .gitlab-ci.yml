image: registry.gitlab.gnome.org/gnome/libsoup/master:v7

stages:
  - build
  - coverage
  - docs
  - deploy

.build:
  stage: build
  tags:
    # We need runners supporting IPv6:
    # https://gitlab.gnome.org/Infrastructure/GitLab/issues/313
    - ipv6

fedora-test:
  extends: .build
  script:
    - meson _build -Db_coverage=true -Dauto_features=enabled
    - ninja -C _build
    - ninja -C _build test
    - ninja -C _build coverage-html
  artifacts:
    reports:
      junit: "_build/${CI_JOB_NAME}-report.xml"
    name: "libsoup-${CI_JOB_NAME}-${CI_COMMIT_REF_NAME}"
    when: always
    paths:
      - "_build/config.h"
      - "_build/meson-logs/testlog.txt"
      - "_build/meson-logs/coveragereport"
  coverage: '/^\s+lines\.+:\s+([\d.]+\%)\s+/'

fedora-scan:
  extends: .build
  allow_failure: true # TODO: Fix all errors
  script:
    - meson _build -Dauto_features=enabled
    - ninja -C _build scan-build
    - bash -c 'if [[ -n "$(ls -A _build/meson-logs/scanbuild/)" ]]; then echo "Scan build log found, assuming defects exist"; exit 1; fi'
  artifacts:
    when: on_failure
    paths:
      - _build/meson-logs/scanbuild

fedora-valgrind:
  extends: .build
  allow_failure: true # Timesout sometime, todo investigate
  script:
    - meson _build -Dauto_features=enabled
    - meson test -C _build --wrap=valgrind
  artifacts:
    when: on_failure
    paths:
      - _build/meson-logs/testlog-valgrind.txt

reference:
  stage: docs
  variables:
    DESTDIR: _install
  needs: []
  script:
    - meson _build -Dgtk_doc=true
    # FIXME: ninja -C _build libsoup-3.0-doc fails
    - ninja -C _build install
    - mv _build/docs/reference/html/ _reference/
    - .gitlab-ci/check-docs.py
  artifacts:
    paths:
      - _build/docs/reference/libsoup-3.0-*.txt
      - _reference
  coverage: '/^([\d]+\%) symbol docs coverage\.\s+/'

pages:
  stage: deploy
  needs: ['reference']
  script:
    - mv _reference/ public/
  artifacts:
    paths:
      - public
  only:
    - master
