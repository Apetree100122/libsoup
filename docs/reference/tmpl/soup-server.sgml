<!-- ##### SECTION Title ##### -->
SoupServer

<!-- ##### SECTION Short_Description ##### -->
HTTP server

<!-- ##### SECTION Long_Description ##### -->
<para>
#SoupServer implements a simple HTTP server.
</para>

<para>
To begin, create a server using soup_server_new(). Add at least one
handler by calling soup_server_add_handler(); the handler will be
called to process any requests underneath the path passed to
soup_server_add_handler(). (If you want all requests to go to the same
handler, just pass "/" (or %NULL) for the path.) Any request that does
not match any handler will automatically be returned to the client
with a 404 (Not Found) status.
</para>

<para>
To add authentication to some or all paths, create an appropriate
#SoupAuthDomain (qv), and add it to the server via
soup_server_add_auth_domain.
</para>

<para>
Additional processing options are available via #SoupServer's signals;
Connect to #SoupServer::request-started to be notified every time a
new request is being processed. (This gives you a chance to connect to
the #SoupMessage "got-" signals in case you want to do processing
before the body has been fully read.)
</para>

<para>
Once the server is set up, start it processing connections by calling
soup_server_run_async() or soup_server_run().  #SoupServer runs via
the glib main loop; if you need to have a server that runs in another
thread (or merely isn't bound to the default main loop), create a
#GMainContext for it to use, and set that via the
#SOUP_SERVER_ASYNC_CONTEXT property. 
</para>

<!-- ##### SECTION See_Also ##### -->
<para>

</para>

<!-- ##### SECTION Stability_Level ##### -->


<!-- ##### STRUCT SoupServer ##### -->
<para>

</para>


<!-- ##### SIGNAL SoupServer::request-aborted ##### -->
<para>

</para>

@soupserver: the object which received the signal.
@arg1: 
@arg2: 

<!-- ##### SIGNAL SoupServer::request-finished ##### -->
<para>

</para>

@soupserver: the object which received the signal.
@arg1: 
@arg2: 

<!-- ##### SIGNAL SoupServer::request-read ##### -->
<para>

</para>

@soupserver: the object which received the signal.
@arg1: 
@arg2: 

<!-- ##### SIGNAL SoupServer::request-started ##### -->
<para>

</para>

@soupserver: the object which received the signal.
@arg1: 
@arg2: 

<!-- ##### ARG SoupServer:async-context ##### -->
<para>

</para>

<!-- ##### ARG SoupServer:interface ##### -->
<para>

</para>

<!-- ##### ARG SoupServer:port ##### -->
<para>

</para>

<!-- ##### ARG SoupServer:ssl-cert-file ##### -->
<para>

</para>

<!-- ##### ARG SoupServer:ssl-key-file ##### -->
<para>

</para>

<!-- ##### FUNCTION soup_server_new ##### -->
<para>

</para>

@optname1: 
@Varargs: 
@Returns: 


<!-- ##### FUNCTION soup_server_is_https ##### -->
<para>

</para>

@server: 
@Returns: 


<!-- ##### FUNCTION soup_server_get_port ##### -->
<para>

</para>

@server: 
@Returns: 


<!-- ##### FUNCTION soup_server_get_listener ##### -->
<para>

</para>

@server: 
@Returns: 


<!-- ##### FUNCTION soup_server_run ##### -->
<para>

</para>

@server: 


<!-- ##### FUNCTION soup_server_run_async ##### -->
<para>

</para>

@server: 


<!-- ##### FUNCTION soup_server_quit ##### -->
<para>

</para>

@server: 


<!-- ##### FUNCTION soup_server_get_async_context ##### -->
<para>

</para>

@server: 
@Returns: 


<!-- ##### USER_FUNCTION SoupServerCallback ##### -->
<para>

</para>

@server: 
@msg: 
@path: 
@query: 
@context: 
@user_data: 


<!-- ##### FUNCTION soup_server_add_handler ##### -->
<para>

</para>

@server: 
@path: 
@callback: 
@destroy: 
@data: 


<!-- ##### FUNCTION soup_server_remove_handler ##### -->
<para>

</para>

@server: 
@path: 


<!-- ##### STRUCT SoupClientContext ##### -->
<para>

</para>

@sock: 
@auth_user: 
@auth_realm: 

<!-- ##### FUNCTION soup_client_context_get_address ##### -->
<para>

</para>

@ctx: 
@Returns: 


<!-- ##### FUNCTION soup_client_context_get_host ##### -->
<para>

</para>

@ctx: 
@Returns: 


<!-- ##### FUNCTION soup_server_add_auth_domain ##### -->
<para>

</para>

@server: 
@auth_domain: 


<!-- ##### FUNCTION soup_server_remove_auth_domain ##### -->
<para>

</para>

@server: 
@auth_domain: 


<!-- ##### FUNCTION soup_server_pause_message ##### -->
<para>

</para>

@server: 
@msg: 


<!-- ##### FUNCTION soup_server_unpause_message ##### -->
<para>

</para>

@server: 
@msg: 


<!-- ##### MACRO SOUP_SERVER_PORT ##### -->
<para>
An alias for the "port" property.
</para>



<!-- ##### MACRO SOUP_SERVER_INTERFACE ##### -->
<para>
An alias for the "interface" property.
</para>



<!-- ##### MACRO SOUP_SERVER_SSL_CERT_FILE ##### -->
<para>
An alias for the "ssl-cert-file" property.
</para>



<!-- ##### MACRO SOUP_SERVER_SSL_KEY_FILE ##### -->
<para>
An alias for the "ssl-key-file" property.
</para>



<!-- ##### MACRO SOUP_SERVER_ASYNC_CONTEXT ##### -->
<para>
An alias for the "async-context" property.
</para>



