// Vala-specific

form_* parent="Soup.Form" name="form_(.+)"
form_encode_datalist.form_data_set type_arguments="string"
form_request_new_from_datalist.form_data_set type_arguments="string"
xmlrpc_* parent="Soup.XMLRPC" name="xmlrpc_(.+)"
XMLRPCFault errordomain parent="Soup.XMLRPC" name="Fault"
XMLRPCError parent="Soup.XMLRPC" name="Error"
xmlrpc_set_response.type skip
HTTPVersion.http_* name="http_(.+)"
AuthDomain
       .add_path#property skip
       .remove_path#property skip

// Backwards compatibility
Requester deprecated_since="2.42" replacement="Session"
KnownStatusCode deprecated_since="2.44" replacement="Status"
ProxyResolver deprecated_since="2.28" replacement="ProxyURIResolver"

// Report upstream
AuthDomain
	.accepts#method name="accepts_authorization"
form_* skip=false
Message
	.add_header_handler skip=false
	.add_status_code_handler skip=false
Server
	.new skip=false
Session
	.send_async.cancellable#parameter default=null
Session*.new_with_options skip=false
Socket
	.new skip=false
URI
	.set_query_from_fields skip=false
// uri_host_*.* type="Soup.URI"
xmlrpc_* skip=false
// xmlrpc_build_method_call.params array array_length_idx=2
xmlrpc_extract_method_response throws="Soup.XMLRPC.Fault"
	.error skip
	.type skip
value_* skip=false

// Not enough GIR information
xmlrpc_parse_method_response throws="Soup.XMLRPC.Fault"
Date
	.new_from_time_t.when type="time_t"
	.to_time_t type="time_t"
xmlrpc_extract_method_call sentinel="G_TYPE_INVALID"
xmlrpc_extract_method_response sentinel="G_TYPE_INVALID"
xmlrpc_request_new sentinel="G_TYPE_INVALID"
xmlrpc_set_fault printf_format
xmlrpc_set_response sentinel="G_TYPE_INVALID"
xmlrpc_build_fault printf_format

// Simplify memory management
Buffer
  .new deprecated_since="2.32" replacement="Buffer.take"
MessageBody
  .append deprecated_since="2.32" replacement="MessageBody.append_take"
